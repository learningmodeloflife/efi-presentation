class e{constructor(e){this.root=e,this.pressedKey=null,this.minutes=876e4,this.isAnimating=!1,this.CHARS_PER_MINUTE=300,this.INTERVAL_MS=6e4/this.CHARS_PER_MINUTE,this.letterInterval=null,this.timerInterval=null,this.nucleotides=["A","C","T","G"],this.completionDate=this.calculateCompletionDate(),this.createDOMStructure(),setTimeout((()=>{const e=this.root.querySelector(".completion-date .date");e&&(e.style.opacity="1")}),5e3),this.startAnimation()}calculateCompletionDate(){const e=new Date;return e.setDate(e.getDate()+7407),e.toLocaleDateString("en-UK",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}createDOMStructure(){this.root.innerHTML=`\n            <div class="timer-wrapper">\n                <div class="completion-date">\n                    <span class="label">Complete on: </span>\n                    <span class="date" style="opacity: 0">${this.completionDate}</span>\n                </div>\n                <div class="timer" id="timer"></div>\n            </div>\n            \n            <div class="typed-text" id="typed-text"></div>\n            \n            <div class="keyboard">\n                <svg viewBox="0 0 850 340" style="width: 850px;">\n                    ${this.generateKeyboardRows({functionRow:["esc","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","logo"],numberRow:["§","1","2","3","4","5","6","7","8","9","0","-","=","delete"],topRow:["tab","Q","W","E","R","T","Y","U","I","O","P","[","]","\\"],homeRow:["caps","A","S","D","F","G","H","J","K","L",";","'","return"],bottomRow:["shift","Z","X","C","V","B","N","M",",",".","/","shift"],modifierRow:["fn","control","option","command","space","command","option","control"]},45,48,48)}\n                </svg>\n            </div>\n        `,this.timerElement=this.root.querySelector("#timer")}generateKeyboardRows(e,t,n,i){let s=20,o="";const a={delete:1.5,tab:1.5,caps:1.5,shift:2.25,return:2,command:1.25,option:1.25,control:1.25,fn:1.25,space:4.5,logo:1.5,"\\":1.5},r=e=>e.reduce(((e,n)=>e+(a[n]||1)*t+3),0),l=Math.max(...Object.values(e).map(r)),c=(850-l)/2;return Object.entries(e).forEach((([e,n])=>{const d=r(n);let h=c+(l-d)/2;n.forEach((n=>{const i=(a[n]||1)*t,r=n.length>1,l="functionRow"===e,c=n.replace("space","").replace("command","⌘").replace("option","⌥").replace("shift","⇧").replace("control","⌃").replace("delete","⌫").replace("return","↵").replace("caps","⇪").replace("logo",`<image href="assets/LML_logo.png" x="${i/2-10}" y="${t/2-10}" width="20" height="20"/>`);o+=`\n                    <g transform="translate(${h}, ${s})" class="key-group">\n                        <rect x="2" y="2" \n                              width="${i-4}" height="${t-4}"\n                              rx="4" ry="4"\n                              fill="#ffffff"\n                              stroke="#d0d0d0"\n                              stroke-width="1.5"\n                              class="key-${n.replace(/[^a-zA-Z0-9]/g,"_")}"/>\n                        \n                        ${"logo"===n?c:`\n                            <text x="${i/2}" y="${t/2}" \n                                  font-family="SF Pro, -apple-system, Arial, sans-serif" \n                                  font-size="${r?"11":l?"10":"13"}" \n                                  font-weight="${r?"500":"400"}"\n                                  text-anchor="middle" \n                                  dominant-baseline="middle"\n                                  fill="#505050"\n                            >${c}</text>\n                        `}\n                    </g>\n                `,h+=i+3})),s+=i})),o}updateTimer(){if(!this.isAnimating)return;const e=this.getCharacterCount().toString(),t=10-e.length;this.timerElement.innerHTML=Array(t).fill(0).map((()=>'<div class="digit-box">&nbsp;</div>')).join("")+e.split("").map((e=>`<div class="digit-box">${e}</div>`)).join("")}getCharacterCount(){return this._characterCount=(this._characterCount||0)+1,this._characterCount}createLetter(e){const t=`key-${e.replace(/[^a-zA-Z0-9]/g,"_")}`,n=this.root.querySelector(`.${t}`);if(n){const t=n.closest(".key-group");t.classList.add("pressed"),setTimeout((()=>{t.classList.remove("pressed")}),80),this.updateTimer();const i=this.root.querySelector("#typed-text"),s=document.createElement("span");s.textContent=e,s.style.position="relative",s.style.display="inline-block",s.style.opacity="1";const o={A:"#44AF69",C:"#F8333C",T:"#FCAB10",G:"#2B9EB3"};s.style.color=o[e],i.prepend(s),setTimeout((()=>{s.style.transition="all 0.5s ease-out",s.style.opacity="0.5",setTimeout((()=>s.remove()),500)}),3e3)}}startAnimation(){this.isAnimating=!0,this._characterCount=0,this.updateTimer(),this.letterInterval=setInterval((()=>{const e=this.nucleotides[Math.floor(Math.random()*this.nucleotides.length)];this.createLetter(e)}),this.INTERVAL_MS)}stopAnimation(){this.isAnimating=!1,clearInterval(this.letterInterval),clearInterval(this.timerInterval)}cleanup(){this.stopAnimation(),this.root.innerHTML=""}}function t(t){return new e(t)}let n=null;function i(){const e=e=>{const i=e.querySelector("#animated-sequence-root");i&&(n=t(i))},i=Reveal.getCurrentSlide();i&&i.classList.contains("sequence-slide")&&e(i),Reveal.on("slidechanged",(t=>{n&&(n.cleanup(),n=null),t.currentSlide.classList.contains("sequence-slide")&&e(t.currentSlide)}))}window.addEventListener("reveal-ready",(()=>{"undefined"!=typeof Reveal?i():console.error("Reveal.js not found. Timer initialization failed.")}));export{i as initializeRevealHandlers,t as initializeSequence};
//# sourceMappingURL=timer.js.map
