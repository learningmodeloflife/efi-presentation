{"version":3,"file":"sequence-mutation.js","sources":["../../js/custom_js/sequence-mutation.js"],"sourcesContent":["function initializeSequenceMutation() {\n    console.log('Initializing sequence mutation');  // Debug log\n\n    const sequence = `GGTGGAGGTTGCAGTGAGCCAAGATCATGCCACTGCACTCCACCCTGGGTGACAGAACAAGACTCTGTCCCCACCAAAAAGAAAAAATGTAAATGAAAAGGAAAGATCTGCCAGGCCATAGCTCCTTGCTTCCCAGGCCACATTCCAGGGAGGCCAGGAGAGGCCCAGAGACCAGTCTAACCGAGGTCCAGGCAGCCCAGAGCACGAAGGCTGGTGGAGAGCTGGCCACGTGTCCTGAGCTACGGTCAGTCAGAAGGCTGAAGGTGAGTCATCCCAGACACCGTGCTCAGTGCCAGGCCCATCAGAGGCCCTGGGCAGGAACAGCAGCACTCAGTAACAATGGGGACACTTACCACCCTTACCCTGGAAGGGCCTCAGAAGCACTCTCTCCAGGCTCGACTTGCCTAAGCTAGGAATCAGATCTGCAGAAACCCAAGTCCCATAGCGTGTGCTGGGTAGAGCCGCCTACTCCTCGTGGGGCCTTTGAGCAGGCAGACAGCTCTCTGTTGGGGATCACAAG`.toUpperCase();\n\n    const colors = {\n        'A': '#44AF69',\n        'C': '#F8333C',\n        'T': '#FCAB10',\n        'G': '#2B9EB3'\n    };\n\n    function createSequenceDisplay() {\n        console.log('Creating sequence display');  // Debug log\n        const container = document.getElementById('sequence-container');\n        if (!container) {\n            console.error('Container not found');  // Debug log\n            return;\n        }\n\n        container.innerHTML = '';\n        let currentLine = document.createElement('div');\n        currentLine.style.whiteSpace = 'pre';\n\n        sequence.split('').forEach((letter, index) => {\n            if (index > 0 && index % 50 === 0) {\n                container.appendChild(currentLine);\n                currentLine = document.createElement('div');\n                currentLine.style.whiteSpace = 'pre';\n            }\n\n            const span = document.createElement('span');\n            span.textContent = index === 199 ? 'G' : letter;\n            span.className = 'sequence-letter';\n            span.style.color = colors[index === 199 ? 'G' : letter];\n            if (index === 199) {\n                span.id = 'mutation-site';\n            }\n            currentLine.appendChild(span);\n        });\n\n        container.appendChild(currentLine);\n        console.log('Sequence display created');  // Debug log\n    }\n\n    function mutateSequence() {\n        const mutationSite = document.getElementById('mutation-site');\n        if (mutationSite) {\n            mutationSite.style.transition = 'all 0.3s ease';\n            mutationSite.style.color = '#F8333C';\n            mutationSite.textContent = 'C';\n        }\n    }\n\n    // Wait for Reveal.js to be ready\n    window.addEventListener('load', () => {\n        console.log('Window loaded');  // Debug log\n        if (typeof Reveal !== 'undefined') {\n            Reveal.on('slidechanged', event => {\n                console.log('Slide changed', event.currentSlide.id);  // Debug log\n                if (event.currentSlide.id === 'sequence-mutation-slide') {\n                    createSequenceDisplay();\n                }\n            });\n\n            Reveal.on('fragmentshown', event => {\n                console.log('Fragment shown');  // Debug log\n                if (event.fragment.closest('#sequence-mutation-slide')) {\n                    mutateSequence();\n                }\n            });\n\n            // Initial creation if we start on this slide\n            if (Reveal.getCurrentSlide()?.id === 'sequence-mutation-slide') {\n                console.log('Initial creation');  // Debug log\n                createSequenceDisplay();\n            }\n        } else {\n            console.error('Reveal.js not found');  // Debug log\n        }\n    });\n}\n\n// Export and initialize\nexport { initializeSequenceMutation };\ninitializeSequenceMutation();"],"names":["initializeSequenceMutation","console","log","sequence","toUpperCase","colors","A","C","T","G","createSequenceDisplay","container","document","getElementById","error","innerHTML","currentLine","createElement","style","whiteSpace","split","forEach","letter","index","appendChild","span","textContent","className","color","id","window","addEventListener","Reveal","on","event","currentSlide","fragment","closest","mutationSite","transition","mutateSequence","getCurrentSlide"],"mappings":"AAAA,SAASA,IACLC,QAAQC,IAAI,kCAEZ,MAAMC,EAAY,2gBAA0gBC,cAEthBC,EAAS,CACXC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,WAGT,SAASC,IACLT,QAAQC,IAAI,6BACZ,MAAMS,EAAYC,SAASC,eAAe,sBAC1C,IAAKF,EAED,YADAV,QAAQa,MAAM,uBAIlBH,EAAUI,UAAY,GACtB,IAAIC,EAAcJ,SAASK,cAAc,OACzCD,EAAYE,MAAMC,WAAa,MAE/BhB,EAASiB,MAAM,IAAIC,SAAQ,CAACC,EAAQC,KAC5BA,EAAQ,GAAKA,EAAQ,IAAO,IAC5BZ,EAAUa,YAAYR,GACtBA,EAAcJ,SAASK,cAAc,OACrCD,EAAYE,MAAMC,WAAa,OAGnC,MAAMM,EAAOb,SAASK,cAAc,QACpCQ,EAAKC,YAAwB,MAAVH,EAAgB,IAAMD,EACzCG,EAAKE,UAAY,kBACjBF,EAAKP,MAAMU,MAAQvB,EAAiB,MAAVkB,EAAgB,IAAMD,GAClC,MAAVC,IACAE,EAAKI,GAAK,iBAEdb,EAAYQ,YAAYC,EAAK,IAGjCd,EAAUa,YAAYR,GACtBf,QAAQC,IAAI,2BAChB,CAYA4B,OAAOC,iBAAiB,QAAQ,KAC5B9B,QAAQC,IAAI,iBACU,oBAAX8B,QACPA,OAAOC,GAAG,gBAAgBC,IACtBjC,QAAQC,IAAI,gBAAiBgC,EAAMC,aAAaN,IAClB,4BAA1BK,EAAMC,aAAaN,IACnBnB,GACJ,IAGJsB,OAAOC,GAAG,iBAAiBC,IACvBjC,QAAQC,IAAI,kBACRgC,EAAME,SAASC,QAAQ,6BAtBvC,WACI,MAAMC,EAAe1B,SAASC,eAAe,iBACzCyB,IACAA,EAAapB,MAAMqB,WAAa,gBAChCD,EAAapB,MAAMU,MAAQ,UAC3BU,EAAaZ,YAAc,IAEnC,CAgBgBc,EACJ,IAIiC,4BAAjCR,OAAOS,mBAAmBZ,KAC1B5B,QAAQC,IAAI,oBACZQ,MAGJT,QAAQa,MAAM,sBAClB,GAER,CAIAd"}