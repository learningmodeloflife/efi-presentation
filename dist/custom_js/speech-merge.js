function t(){window.addEventListener("load",(()=>{"undefined"!=typeof Reveal&&Reveal.on("fragmentshown",(t=>{t.fragment.classList.contains("merge-trigger")&&async function(t){const e=Array.from(t.querySelectorAll(".speech-container"));e[0].style.color="#011627",e[1].style.color="#f71735",e[2].style.color="#57886c";const o=function(t){const e=[...t];for(let t=e.length-1;t>0;t--){const o=Math.floor(Math.random()*(t+1));[e[t],e[o]]=[e[o],e[t]]}return e}(e.map(((t,e)=>t.textContent.trim().split(/\s+/).map((e=>({text:e,color:t.style.color}))))).flat()),n={opacity:[1,0]},s={opacity:[0,1]};await Promise.all(e.map((t=>t.animate(n,{duration:1e3,fill:"forwards"}).finished)));const a=e[1];a.innerHTML=o.map((t=>`<span class="word" style="color: ${t.color}">${t.text}</span>`)).join(" "),t.classList.add("merged"),a.style.width="100%",a.style.position="absolute",a.style.left="50%",a.style.transform="translateX(-50%)",e[0].style.display="none",e[2].style.display="none",await a.animate(s,{duration:1e3,fill:"forwards"}).finished}(t.fragment.closest(".speech-slide"))}))}))}export{t as initializeSpeechMerge};
//# sourceMappingURL=speech-merge.js.map
